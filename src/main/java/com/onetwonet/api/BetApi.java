/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.1.1).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.onetwonet.api;

import com.onetwonet.model.BetResponse;
import com.onetwonet.model.BetsCreateRequest;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;
import springfox.documentation.annotations.ApiIgnore;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen")
@Validated
@Api(value = "Bet", description = "the Bet API")
public interface BetApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * POST /api/v1/bet : create Bets from list
     *
     * @param betsCreateRequest  (optional)
     * @return created Bets (status code 200)
     */
    @ApiOperation(value = "create Bets from list", nickname = "createBets", notes = "", response = BetResponse.class, responseContainer = "List", tags={ "Bet", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "created Bets", response = BetResponse.class, responseContainer = "List") })
    @PostMapping(
        value = "/api/v1/bet",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    default ResponseEntity<List<BetResponse>> createBets(@ApiParam(value = ""  )  @Valid @RequestBody(required = false) BetsCreateRequest betsCreateRequest) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"stake\" : 1.4658129805029452, \"date\" : \"date\", \"game\" : \"game\", \"clientid\" : 5, \"numbets\" : 6, \"returns\" : 5.962133916683182, \"id\" : 0 }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /api/v1/bet : method for finding user
     *
     * @return all bets (status code 200)
     *         or Bets not found (status code 404)
     */
    @ApiOperation(value = "method for finding user", nickname = "findBets", notes = "", response = BetResponse.class, responseContainer = "List", tags={ "Bet", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "all bets", response = BetResponse.class, responseContainer = "List"),
        @ApiResponse(code = 404, message = "Bets not found") })
    @GetMapping(
        value = "/api/v1/bet",
        produces = { "application/json" }
    )
    default ResponseEntity<List<BetResponse>> findBets() {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"stake\" : 1.4658129805029452, \"date\" : \"date\", \"game\" : \"game\", \"clientid\" : 5, \"numbets\" : 6, \"returns\" : 5.962133916683182, \"id\" : 0 }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
